version: "3.4"
services:
  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/sabnzbd:/config
      - ${NFS_ROOT}/downloads:/downloads
      - ${NFS_ROOT}/incomplete-downloads:/incomplete-downloads

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${NFS_ROOT}/media/tv:/tv
      - ${NFS_ROOT}/downloads:/downloads

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${NFS_ROOT}/media/movies:/movies
      - ${NFS_ROOT}/downloads:/downloads

  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1002
      - PGID=1003
      - VERSION=docker
      - UMASK_SET=022
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIG_ROOT}/plex/db:/config
      - ${CONFIG_ROOT}/plex/transcode:/transcode
      - ${NFS_ROOT}/media:/media
    restart: unless-stopped

  influxdb:
    build: ./components/tig/influxdb
    container_name: influxdb
    ports:
      - ${INFLUXDB_PORT}:${INFLUXDB_PORT}
    volumes:
      - ${CONFIG_ROOT}/influx/lib:/var/lib/influxdb
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - tig

  telegraf:
    build: ./components/tig/telegraf
    container_name: telegraf
    links:
      - influxdb
    environment:
      HOST_NAME: "telegraf"
      INFLUXDB_HOST: "influxdb"
      INFLUXDB_PORT: "8086"
      DATABASE: "telegraf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc
    privileged: true
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - tig

  grafana:
    build: ./components/tig/grafana
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    links:
      - influxdb
    volumes:
      - ${CONFIG_ROOT}/grafana/lib:/var/lib/grafana
      - ${CONFIG_ROOT}/grafana/log:/var/log/grafana
      - ${CONFIG_ROOT}/grafana/plugins:/var/lib/grafana/plugins
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - tig

networks:
  tig:
